var searchIndex = {};
searchIndex["wtf8"] = {"doc":"Implementation of [the WTF-8 encoding](https://simonsapin.github.io/wtf-8/).","items":[[3,"CodePoint","wtf8","A Unicode code point: from U+0000 to U+10FFFF.",null,null],[3,"Wtf8Buf","","An owned, growable string of well-formed WTF-8 data.",null,null],[3,"Wtf8","","A borrowed slice of well-formed WTF-8 data.",null,null],[3,"Wtf8CodePoints","","Iterator for the code points of a WTF-8 string.",null,null],[3,"IllFormedUtf16CodeUnits","","",null,null],[11,"clone","","",0,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",0,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely create a new `CodePoint` without checking the value.",0,{"inputs":[{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Create a new `CodePoint` if the value is a valid code point.",0,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Create a new `CodePoint` from a `char`.",0,{"inputs":[{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Return the numeric value of the code point.",0,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally return a Unicode scalar value for the code point.",0,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Return a Unicode scalar value for the code point.",0,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",1,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"deref","","",1,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create an new, empty WTF-8 string.",1,{"inputs":[],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Create an new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",1,{"inputs":[{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Create a WTF-8 string from an UTF-8 `String`.",1,{"inputs":[{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Create a WTF-8 string from an UTF-8 `&amp;str` slice.",1,{"inputs":[{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_ill_formed_utf16","","Create a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",1,null],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",1,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":null}],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",1,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append an UTF-8 slice at the end of the string.",1,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":null}],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",1,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8"}],"output":null}],[11,"push_char","","Append a Unicode scalar value at the end of the string.",1,{"inputs":[{"name":"wtf8buf"},{"name":"char"}],"output":null}],[11,"push","","Append a code point at the end of the string.",1,{"inputs":[{"name":"wtf8buf"},{"name":"codepoint"}],"output":null}],[11,"truncate","","Shortens a string to the specified length.",1,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":null}],[11,"into_string","","Consume the WTF-8 string and try to convert it to UTF-8.",1,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consume the WTF-8 string and convert it lossily to UTF-8.",1,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",1,{"inputs":[{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":null}],[11,"eq","","",2,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",2,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Create a WTF-8 slice from a UTF-8 `&amp;str` slice.",2,{"inputs":[{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Return the length, in WTF-8 bytes.",2,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"slice","","Return a slice of the given string for the byte range [`begin`..`end`).",2,{"inputs":[{"name":"wtf8"},{"name":"usize"},{"name":"usize"}],"output":{"name":"wtf8"}}],[11,"slice_from","","Return a slice of the given string from byte `begin` to its end.",2,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"wtf8"}}],[11,"slice_to","","Return a slice of the given string from its beginning to byte `end`.",2,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"wtf8"}}],[11,"ascii_byte_at","","Return the code point at `position` if it is in the ASCII range,\nor `b&#39;\\xFF&#39; otherwise.",2,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Return an iterator for the stringâ€™s code points.",2,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Try to convert the string to UTF-8 and return a `&amp;str` slice.",2,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily convert the string to UTF-8.\nReturn an UTF-8 `&amp;str` slice if the contents are well-formed in UTF-8.",2,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"to_ill_formed_utf16","","Convert the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",2,{"inputs":[{"name":"wtf8"}],"output":{"name":"illformedutf16codeunits"}}],[11,"clone","","",3,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",3,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",3,null],[11,"clone","","",4,{"inputs":[{"name":"illformedutf16codeunits"}],"output":{"name":"illformedutf16codeunits"}}],[11,"next","","",4,{"inputs":[{"name":"illformedutf16codeunits"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"eq","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"hash","","",0,{"inputs":[{"name":"codepoint"},{"name":"h"}],"output":null}],[11,"hash","","",1,{"inputs":[{"name":"wtf8buf"},{"name":"h"}],"output":null}],[11,"hash","","",2,{"inputs":[{"name":"wtf8"},{"name":"h"}],"output":null}]],"paths":[[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"IllFormedUtf16CodeUnits"]]};
initSearch(searchIndex);
